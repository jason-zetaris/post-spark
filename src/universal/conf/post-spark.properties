#dictionary db
jdbc_url=jdbc:derby://localhost:1527/../dictionary/dictionaryStore;create=true
jdbc_driver_class=org.apache.derby.jdbc.ClientDriver
username=admin
password=password
hibernate.dialect=com.zetaris.lightning.sql.ClobDerbyDialect
hibernate.hbm2ddl.auto=validate
hibernate.default_schema=
hibernate.show_sql=false

# connection pool setting for meta store
poolsize.initialSize=1
poolsize.maxTotal=50

#landing zone for data ingestion
landing_zone=/Users/jaesungjun/zetaris_data_hub/landing
staging_zone=/Users/jaesungjun/zetaris_data_hub/staging
manual_zone=/Users/jaesungjun/zetaris_data_hub/staging/manual
landing_zone_watch_interval_in_sec=3

#zeppelin notebook host port
notebook_host=localhost
notebook_port=8080
notebook_dir_for_data_quality_management=/wib-dq
notebook_dir_for_advanced_analytics=/zetaris-advanced-analytics

#Running Mode(STANDALONE | SAAS_MAIN | SAAS_SQL_WORKBENCH | SAAS_STREAMING)
running_mode=STANDALONE

#kafka bootstrap servers, this is used in both STANDALONE AND SAAS_MAIN mode
#kafka_bootstrap_servers=kafka1:9092,kafka2:9092
kafka_bootstrap_servers=localhost:9092

#kafka user credential, these are used for push data source
kafka_accesskey=$ConnectionString
kafka_securitykey=change_me

#waiting in millis to get topic meta data after creating topic
kafka_topic_creation_wait_in_millis=5000

#waiting in millis to start reading message in topic. Topic will be closed automatically if there is no message in this waiting time
kafka_topic_read_wait_in_millis=30000

#publish thread count
kafka_query_publisher_thread_count=10

#Lightning REST service port
jdbc_endpoint_port=9998

#data warehouse api host
warehouse_provisioning_server_host=localhost
warehouse_provisioning_server_port=9010

#data warehouse monitor interval in second
data_warehouse_monitor_interval=10
# The combination of lightning_cloud_rep_id and kafka_push_data_source_topic is used for push type data source

#representative(organisation) id in Lightning cloud
lightning_cloud_rep_id=

#kafka topic for push data source. This is provided by cloud saas
kafka_push_data_source_topic=push_ds

#kafka topic partition id. this is provided by cloud saas
kafka_push_data_source_partition_id=0

#maximum time to block in millis to poll the topic
poll_topic_to_block_in_millis=5000

#maximum retry to poll the topic
poll_topic_retry_threshold=3

#bound organisation id for spin off d/w cluster
#Provisioning server will change when spinning off d/w cluster in case of SAAS_SQL_WORKBENCH mode
#Don't change this explicitly
bound_organisation_id=default

#bound d/w name for spin off d/w cluster
bound_data_warehouse_name=change_me

#threshold d/w idle time, SAAS will auto shutdown when the idle is lasting form than this threshold
#negative turn off this
auto__shutdown_data_warehouse_idle_in_min=5

#local file system root
filesystem_staging=../data

#authorization_provider, LIGHTNING or OPA
authorization_provider=LIGHTNING

#In case of OPA authorization, OPA server and port
opa_server=localhost
opa_port=8181
opa_url_prefix=/v1/data/lpoc_7/schema

solr_server=localhost:8983/solr/

